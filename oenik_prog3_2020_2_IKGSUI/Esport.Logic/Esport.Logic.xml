<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esport.Logic</name>
    </assembly>
    <members>
        <member name="T:Esport.Logic.AveragesResult">
            <summary>
            Average result class.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.Name">
            <summary>
            Gets or sets the Name of the element.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.Wins">
            <summary>
            Gets or sets the Wins of the element.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.BettedAmount">
            <summary>
            Gets or sets betted amount.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.ID">
            <summary>
             Gets or sets the id.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.Match">
            <summary>
            Gets or sets the Match.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.Odd">
            <summary>
            Gets or sets the odd.
            </summary>
        </member>
        <member name="P:Esport.Logic.AveragesResult.MatchID">
            <summary>
            Gets or sets the Match id.
            </summary>
        </member>
        <member name="M:Esport.Logic.AveragesResult.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Esport.Logic.LocationLogic">
            <summary>
            Location logic.
            </summary>
        </member>
        <member name="T:Esport.Logic.MatchLogic">
            <summary>
            Match logic.
            </summary>
        </member>
        <member name="M:Esport.Logic.MatchLogic.#ctor(Esport.Repository.Interfaces.IRepository{Esport.Data.Match})">
            <summary>
            Initializes a new instance of the <see cref="T:Esport.Logic.MatchLogic"/> class.
            MatchLogic Constructor.
            </summary>
            <param name="matchrepo">The Repository parameter of the Matchlogic entity.</param>
        </member>
        <member name="T:Esport.Logic.TeamLogic">
            <summary>
            Teamlogic.
            </summary>
        </member>
        <member name="M:Esport.Logic.TeamLogic.#ctor(Esport.Repository.Interfaces.IRepository{Esport.Data.Team})">
            <summary>
            Initializes a new instance of the <see cref="T:Esport.Logic.TeamLogic"/> class.
            TeamLogic constructor.
            </summary>
            <param name="rep">Gets the repository parameter.</param>
        </member>
        <member name="M:Esport.Logic.TeamLogic.Tasks">
            <summary>
            Retuns a task.
            </summary>
            <returns>A task.<see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.WhereF">
            <summary>
            Where the Team name contains F Task.
            </summary>
            <returns>A team.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.Getrepo">
            <summary>
            ITeamrepository.
            </summary>
            <returns>The Iteamrepository.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.Bet(System.Int32,System.Int32)">
            <summary>
            Betting method.
            </summary>
            <param name="teamid">Gets a team by id.</param>
            <param name="amount">Gets the amount of the betting.</param>
        </member>
        <member name="M:Esport.Logic.TeamLogic.ListAllBettings">
            <summary>
            Lists all the bettings for the teams.
            </summary>
            <returns>List.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.GetAverageWins">
            <summary>
            Returns the average wins.
            </summary>
            <returns>Double.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.Elemez">
            <summary>
            Where wins are greater then 200.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.ElemezTask">
            <summary>
            Where wins are greater then 200.E.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.OddLessThan3">
            <summary>
            Where the odd is less than 3.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.OddLessThan3Task">
            <summary>
            Where the odd is less than 3 task.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Esport.Logic.TeamLogic.OddGenerator(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Esport.Logic.GlobalSuppressions">
            <summary>
            Surpresses the CA1014 warning.
            </summary>
        </member>
        <member name="T:Esport.Logic.IBetting">
            <summary>
            The IBetting interface.
            </summary>
        </member>
        <member name="M:Esport.Logic.IBetting.Bet(System.Int32,System.Int32)">
            <summary>
            Bet.
            </summary>
            <param name="teamid">Bets to a team by id.</param>
            <param name="amount">Bets an amount for the team.</param>
        </member>
        <member name="M:Esport.Logic.IBetting.ListAllBettings">
            <summary>
            Lists the all bettings.
            </summary>
            <returns>List.</returns>
        </member>
        <member name="T:Esport.Logic.IOddsGenerator">
            <summary>
            Generates the odds.
            </summary>
        </member>
        <member name="M:Esport.Logic.IOddsGenerator.OddGenerator(System.Int32)">
            <summary>
            Generates the odds.
            </summary>
            <param name="teamid">Generates an odd to a team.</param>
        </member>
    </members>
</doc>
